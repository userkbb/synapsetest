name: Deploy Synapse workspace to 'workspace_public' environment

# 触发条件：当代码推送到 main 分支时触发工作流
#on:
#  push:
 #   branches:
  #    - main

  on:
  workflow_dispatch: 

# 定义工作流的环境，用于GitHub的界面显示和审批
env:
  RESOURCE_GROUP: 'synapsesink' # 替换为你的资源组名称
  TARGET_WORKSPACE: 'sinksynapsemigration'   # 你的目标工作区名称

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: 
      name: workspace_public # 在GitHub UI中显示的环境名称
      

    steps:
    # 1. 检出代码
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
          ref: workspace_publish  # 确保检出的是发布分支

    # 2. 登录到 Azure China
    - name: Login to Azure
        uses: azure/login@v2
        with:
          creds: '{
            "clientId": "${{ secrets.AZURE_CLIENT_ID }}",
            "clientSecret": "${{ secrets.AZURE_CLIENT_SECRET }}",
            "tenantId": "${{ secrets.AZURE_TENANT_ID }}",
            "subscriptionId": "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
          }'
          environment: 'AzureChinaCloud'

    # 3. 使用 Azure CLI 执行部署
    - name: Deploy ARM template
      run: |
        # 使用 az deployment group create 命令进行部署
        # 模板和参数文件路径根据你项目的实际结构修改
        az deployment group create \
          --resource-group ${{ env.RESOURCE_GROUP }} \
          --template-file ./workspace_public/TemplateForWorkspace.json \
          --parameters ./workspace_public/TemplateParametersForWorkspace.json \
          --parameters workspacename="${{ env.TARGET_WORKSPACE }}" \
          --name synapse_deploy_$(date +%s) # 给此次部署一个唯一名称

    # 4. (可选) 登出 Azure（良好的安全实践）
    - name: Logout from Azure
      run: |
        az logout
      if: always() # 即使之前的步骤失败，也执行登出
