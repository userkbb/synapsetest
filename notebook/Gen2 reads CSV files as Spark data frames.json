{
	"name": "Gen2 reads CSV files as Spark data frames",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "Spark1",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"runAsWorkspaceSystemIdentity": false,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "6a1edde6-d095-455f-9221-51040f259e02"
			}
		},
		"metadata": {
			"saveOutput": true,
			"synapse_widget": {
				"version": "0.1"
			},
			"enableDebugMode": false,
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/78df7407-a3a1-4a7c-9494-bb3055562dfe/resourceGroups/zhengshi/providers/Microsoft.Synapse/workspaces/migrationmltest/bigDataPools/Spark1",
				"name": "Spark1",
				"type": "Spark",
				"endpoint": "https://migrationmltest.dev.azuresynapse.azure.cn/livyApi/versions/2019-11-01-preview/sparkPools/Spark1",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net",
					"authHeader": null
				},
				"sparkVersion": "3.4",
				"nodeCount": 10,
				"cores": 4,
				"memory": 28,
				"extraHeader": null
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"from pyspark.sql import SparkSession\n",
					"from pyspark.sql.types import *\n",
					"account_name = \"test0214gen2\"\n",
					"container_name = \"mlmigration\"\n",
					"relative_path = \"RetailSales.csv\"\n",
					"adls_path = 'abfss://%s@%s.dfs.core.chinacloudapi.cn/%s' % (container_name, account_name, relative_path)\n",
					"\n",
					"df1 = spark.read.option('header', 'true') \\\n",
					"                .option('delimiter', ',') \\\n",
					"                .csv(adls_path)"
				],
				"execution_count": 28
			},
			{
				"cell_type": "code",
				"source": [
					"import ipywidgets as widgets"
				],
				"execution_count": 29
			},
			{
				"cell_type": "code",
				"source": [
					"slider = widgets.IntSlider()\n",
					"display(slider)"
				],
				"execution_count": 30
			}
		]
	}
}